/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.duke.biology.baughlab.wormsize.gui;
import edu.duke.biology.baughlab.wormsize.WormSizerWorker;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import javax.swing.JOptionPane;
/**
 *
 * @author bradleymoore
 */
public class ProgressFrame extends javax.swing.JFrame implements java.beans.PropertyChangeListener {
    protected WormSizerWorker worker;
    public static final String STATUS_PROPERTY = "STATUS";
    public static final String STATUS_DONE = "DONE";
    public static final String STATUS_CANCEL = "CANCEL";
    
    
    /**
     * Creates new form ProgressFrame
     */
    public ProgressFrame(WormSizerWorker worker) {
        initComponents();
        
        this.worker = worker;
        worker.addPropertyChangeListener(this);
        worker.setProgressFrame(this);
        
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                firePropertyChange(STATUS_PROPERTY, null, STATUS_DONE);
                dispose();
            }
        });
        
        this.addWindowListener(new java.awt.event.WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                tryCancel();                
            }
            
        });
    }

    public void tryCancel() {
        int ret = JOptionPane.showConfirmDialog(this, "WormSizer is running.  Would you like to cancel (work will be lost)?", "Cancel Processing?", JOptionPane.OK_CANCEL_OPTION);
        if (ret == JOptionPane.OK_OPTION) {
            worker.cancel(true);
            firePropertyChange(STATUS_PROPERTY, null, STATUS_CANCEL);
            dispose();
        }
    }
    
    public void setProgress(int curDir, int totalDir, int curImg, int totalImg) {
        directoryLabel.setText(String.format("Directory %d of %d.", curDir, totalDir));
        imageLabel.setText(String.format("Image %d of %d.", curImg, totalImg));
    }
    
    public void start() {
        worker.execute();
    }

    @Override
    public void propertyChange(PropertyChangeEvent pce) {
        if (worker.isDone()) {
           directoryLabel.setText("Processing complete!");
           imageLabel.setText("");
           this.nextButton.setEnabled(true);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nextButton = new javax.swing.JButton();
        directoryLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("WormSizer Progress");

        nextButton.setText("Next");
        nextButton.setEnabled(false);

        directoryLabel.setText(" ");

        imageLabel.setText(" ");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 309, Short.MAX_VALUE)
                        .add(nextButton))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(directoryLabel)
                            .add(imageLabel))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(directoryLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(imageLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 67, Short.MAX_VALUE)
                .add(nextButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgressFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgressFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgressFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgressFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                //new ProgressFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel directoryLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JButton nextButton;
    // End of variables declaration//GEN-END:variables
}
